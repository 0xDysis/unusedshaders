// Fragment shader for desktop
const fsSourceDesktop = `
precision highp float;
uniform vec2 iResolution;
uniform float iTime;

vec3 palette( float t ) {
    vec3 a = vec3(0.5, 0.5, 0.5);
    vec3 b = vec3(0.5, 0.5, 0.5);
    vec3 c = vec3(1.0, 1.0, 1.0);
    vec3 d = vec3(0.263,0.416,0.557);

    return a + b*cos( 6.*(c*t+d) );
}

void main() {
    vec2 uv = (gl_FragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;
    vec2 uv0 = uv;
    vec3 finalColor = vec3(0.0);

    for (float i = 0.0; i < 4.0; i++) {
        uv = abs(uv * 1.2) - 0.5;

        float d = length(uv) * exp(-length(uv0));

        vec3 col = palette(length(uv0) + i*.9 + iTime*.2);

        d = tan(sin(sin(d*8. + iTime)))/90.;
        d = fract(d);

        d = pow(0.01 / d, 1.);
        vec2 uv0 = uv+sin(d);
        

        finalColor += col * sin(exp(d));
    }

    gl_FragColor = vec4(finalColor, 1.0);
}
